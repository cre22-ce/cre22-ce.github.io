var N=null,E="",T="t",U="u",searchIndex={};
var R=["The original data passed into `from_bytes` to construct…","http_type","The HTTP type (usually `HTTP/1.1`).","headers","Data found after a double carraige return new line from…","string","httpmethod","result","malformedhttprequestexception","httprequest","to_string","from_bytes","Takes in a slice of bytes and returns a `Result`…","httpresponse","malformedhttpresponseexception","hashmap","to_string_no_data","as_bytes","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","to_httpmethod","formatter","description","HTTPRequest","HTTPResponse","HTTPMethod","HTTPObject","ToHTTPMethod","MalformedHTTPRequestException","MalformedHTTPResponseException"];

searchIndex["http_utils"]={"doc":"`HTTP_Utils` library for building HTTP requests and…","i":[[3,R[34],"http_utils","`MalformedHTTPRequestException` is used by `HTTPRequest`…",N,N],[3,R[35],E,"`MalformedHTTPResponseException` is used by `HTTPResponse`…",N,N],[3,R[29],E,"`HTTPRequest` is a struct containing an HTTP request.",N,N],[12,"raw",E,R[0],0,N],[12,"method",E,"The HTTP method (`GET`,`POST`,`PATCH`, etc...).",0,N],[12,"path",E,"The path requested. Confirmed to be valid url syntax.",0,N],[12,R[1],E,R[2],0,N],[12,R[3],E,"Headers included in the request (e.g., `Host`).",0,N],[12,"data",E,R[4],0,N],[3,R[30],E,"`HTTPResponse` is a struct containing an HTTP response.",N,N],[12,"raw",E,R[0],1,N],[12,R[1],E,R[2],1,N],[12,"status",E,"Status tuple containing the status code given and the…",1,N],[12,"reason",E,"Reason given by the response.",1,N],[12,R[3],E,"Headers included in the response (e.g., `Host`).",1,N],[12,"data",E,R[4],1,N],[4,R[31],E,"`HTTPMethod` is an enum containing all HTTP request methods.",N,N],[13,"GET",E,E,2,N],[13,"HEAD",E,E,2,N],[13,"POST",E,E,2,N],[13,"PUT",E,E,2,N],[13,"DELETE",E,E,2,N],[13,"CONNECT",E,E,2,N],[13,"OPTIONS",E,E,2,N],[13,"TRACE",E,E,2,N],[13,"PATCH",E,E,2,N],[4,R[32],E,"Enum returned by `check_if_request_or_response` to return…",N,N],[13,"Request",E,E,3,N],[13,"Response",E,E,3,N],[13,"Neither",E,E,3,N],[5,"string_to_hash_map",E,"Allows you to convert a `String` into a `HashMap` with…",N,[[[R[5]]],[[R[5]],[R[15],[R[5],R[5]]]]]],[5,"check_if_request_or_response",E,"Returns an `HTTPObject` containing either a…",N,[[],["httpobject"]]],[8,R[33],E,"`ToHTTPMethod` is a trait used to generalize objects that…",N,N],[10,R[26],E,"Converts implimented struct into an `HTTPMethod`.",4,[[["self"]],[[R[6]],[R[7],[R[6]]]]]],[11,R[10],E,E,2,[[["self"]],[R[5]]]],[11,R[11],E,R[12],0,[[],[[R[7],[R[9],R[8]]],[R[8]],[R[9]]]]],[11,"create_request",E,"Forms an `HTTPRequest` from data provided.",0,[[["u8"],[R[5]],["vec",["u8"]],[R[15],[R[5],R[5]]],["tohttpmethod"]],[[R[7],[R[9],R[8]]],[R[8]],[R[9]]]]],[11,R[10],E,"Converts this `HTTPRequest` into a string. The returned…",0,[[["self"]],[R[5]]]],[11,R[16],E,"Converts this `HTTPRequest` into a string without the…",0,[[["self"]],[R[5]]]],[11,"to_vec",E,"Converts this `HTTPRequest` into a `Vec<u8>`.",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[17],E,"Converts this `HTTPRequest` into a `Vec<u8>` without…",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[11],E,R[12],1,[[],[[R[7],[R[13],R[14]]],[R[13]],[R[14]]]]],[11,"create_response",E,"Forms an `HTTPResponse` from data provided.",1,[[["i64"],[R[5]],["vec",["u8"]],[R[15],[R[5],R[5]]],["u8"]],[[R[7],[R[13],R[14]]],[R[13]],[R[14]]]]],[11,R[10],E,"Converts this `HTTPResponse` into a string. # Panics Will…",1,[[["self"]],[R[5]]]],[11,R[16],E,"Converts this `HTTPResponse` into a string without the…",1,[[["self"]],[R[5]]]],[11,"to_vec",E,"Converts this `HTTPResponse` into a `Vec<u8>`.",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[17],E,"Converts this `HTTPResponse` into a `Vec<u8>` without…",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,5,[[],[U]]],[11,R[10],E,E,5,[[["self"]],[R[5]]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[7]]]],[11,R[21],E,E,5,[[],[R[7]]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[R[25]]]],[11,"into",E,E,6,[[],[U]]],[11,R[10],E,E,6,[[["self"]],[R[5]]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[7]]]],[11,R[21],E,E,6,[[],[R[7]]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[R[25]]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[7]]]],[11,R[21],E,E,0,[[],[R[7]]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[R[25]]]],[11,"into",E,E,1,[[],[U]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[7]]]],[11,R[21],E,E,1,[[],[R[7]]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[R[25]]]],[11,"into",E,E,2,[[],[U]]],[11,R[10],E,E,2,[[["self"]],[R[5]]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[7]]]],[11,R[21],E,E,2,[[],[R[7]]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[25]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[7]]]],[11,R[21],E,E,3,[[],[R[7]]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[R[25]]]],[11,R[26],E,E,2,[[["self"]],[[R[6]],[R[7],[R[6]]]]]],[11,"clone",E,E,5,[[["self"]],[R[8]]]],[11,"clone",E,E,6,[[["self"]],[R[14]]]],[11,"clone",E,E,2,[[["self"]],[R[6]]]],[11,"clone",E,E,0,[[["self"]],[R[9]]]],[11,"clone",E,E,1,[[["self"]],[R[13]]]],[11,"eq",E,E,2,[[["self"],[R[6]]],["bool"]]],[11,"fmt",E,E,5,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,6,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,2,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,0,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,1,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,5,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,6,[[["self"],[R[27]]],[R[7]]]],[11,"fmt",E,E,2,[[["self"],[R[27]]],[R[7]]]],[11,"from_str",E,E,2,[[["str"]],[[R[6]],[R[7],[R[6]]]]]],[11,R[28],E,E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[["error"],["option",["error"]]]]],[11,R[28],E,E,6,[[["self"]],["str"]]],[11,"cause",E,E,6,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,R[29]],[3,R[30]],[4,R[31]],[4,R[32]],[8,R[33]],[3,R[34]],[3,R[35]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);